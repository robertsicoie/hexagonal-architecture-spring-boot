// dependency check
buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'org.owasp:dependency-check-gradle:7.2.1'
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'

	id 'jacoco'
	id 'org.cyclonedx.bom' version '1.7.2'
	id 'org.owasp.dependencycheck' version '7.2.1'
	id "com.github.spotbugs" version "5.0.12"
}

group = 'consulting.convex.hexagonal'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
	dependencies {
		compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.24'
		annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.24'

		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

		implementation group: 'org.hsqldb', name:'hsqldb', version: '2.7.0'

		implementation group: 'org.mapstruct', name: 'mapstruct', version: '1.5.3.Final'
		annotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor', version: '1.5.3.Final'

		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
		testImplementation 'com.tngtech.archunit:archunit-junit5:1.0.0'
	}
}


tasks.named('test') {
	useJUnitPlatform()
}

// jacoco

test {
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = false
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir("jacocoHtml")
	}
}

jacoco {
	toolVersion = "0.8.8"
	reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.5
			}
		}
	}
}

check.dependsOn jacocoTestCoverageVerification

// cyclonedxBom
// ./gradlew cyclonedxBom -info

cyclonedxBom {
	// includeConfigs is the list of configuration names to include when generating the BOM (leave empty to include every configuration)
	includeConfigs = ["runtimeClasspath"]
	// skipConfigs is a list of configuration names to exclude when generating the BOM
	skipConfigs = ["compileClasspath", "testCompileClasspath"]
	// Specified the type of project being built. Defaults to 'library'
	projectType = "application"
	// Specified the version of the CycloneDX specification to use. Defaults to 1.4.
	schemaVersion = "1.4"
	// Boms destination directory (defaults to build/reports)
	destination = file("build/reports")
	// The file name for the generated BOMs (before the file format suffix). Defaults to 'bom'
	outputName = "bom"
	// The file format generated, can be xml, json or all for generating both
	outputFormat = "json"
	// Exclude BOM Serial Number
	includeBomSerialNumber = false
	// Override component version
	componentVersion = "2.0.0"
}

// dependency check
// ./gradlew dependencyCheckAnalyze

apply plugin: 'org.owasp.dependencycheck'

// spotbugs
// ./gradlew spotbugsMain
spotbugsTest {
	enabled = false;
}
apply plugin: "com.github.spotbugs"

// custom
task staticAnalysis {
	dependsOn 'spotbugsMain'
	dependsOn 'dependencyCheckAnalyze'
}